{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction AppComponent_div_10_div_1_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \" Click to check answer \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_10_div_1_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const i_r3 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.checkResult(i_r3));\n    });\n    i0.ɵɵelementStart(1, \"div\", 10)(2, \"span\", 11);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 12);\n    i0.ɵɵtext(5, \"\\u00D7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 13);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\", 14);\n    i0.ɵɵtext(9, \"=\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_div_10_div_1_Template_input_ngModelChange_10_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const i_r3 = restoredCtx.index;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.userInputs[i_r3] = $event);\n    })(\"click\", function AppComponent_div_10_div_1_Template_input_click_10_listener($event) {\n      return $event.stopPropagation();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"span\", 16);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementStart(13, \"span\", 17);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(15, AppComponent_div_10_div_1_span_15_Template, 2, 0, \"span\", 18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const result_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"revealed\", ctx_r1.shownResults.has(i_r3))(\"correct\", ctx_r1.resultStatuses.get(i_r3) === true)(\"incorrect\", ctx_r1.resultStatuses.get(i_r3) === false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.number);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i_r3 + 1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.userInputs[i_r3]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"hidden\", !ctx_r1.shownResults.has(i_r3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", result_r2, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.resultStatuses.get(i_r3) === true ? \"\\u2713\" : \"\\u2717\", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.shownResults.has(i_r3));\n  }\n}\nfunction AppComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, AppComponent_div_10_div_1_Template, 16, 14, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.tableArray);\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.title = 'NeumericTable';\n    this.number = 0;\n    this.tableArray = [];\n    this.shownResults = new Set();\n    this.userInputs = [];\n    this.resultStatuses = new Map(); // null = not checked, true = correct, false = wrong\n  }\n\n  generateTable() {\n    this.tableArray = [];\n    this.shownResults.clear();\n    this.userInputs = new Array(10).fill(null);\n    this.resultStatuses.clear();\n    for (let i = 1; i <= 10; i++) {\n      this.tableArray.push(i * this.number);\n    }\n  }\n  checkResult(index) {\n    if (this.userInputs[index] === undefined || this.userInputs[index] === null) return;\n    const isCorrect = this.userInputs[index] === this.tableArray[index];\n    this.resultStatuses.set(index, isCorrect);\n    this.shownResults.add(index);\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 11,\n      vars: 3,\n      consts: [[1, \"container\"], [1, \"header\"], [1, \"subtitle\"], [1, \"input-section\"], [\"type\", \"number\", \"placeholder\", \"Enter a number\", 1, \"number-input\", 3, \"ngModel\", \"ngModelChange\"], [1, \"generate-btn\", 3, \"click\"], [\"class\", \"table-container\", 4, \"ngIf\"], [1, \"table-container\"], [\"class\", \"table-row\", 3, \"revealed\", \"correct\", \"incorrect\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"table-row\", 3, \"click\"], [1, \"equation\"], [1, \"number\"], [1, \"operator\"], [1, \"multiplier\"], [1, \"equals\"], [\"type\", \"number\", 1, \"result-input\", 3, \"ngModel\", \"ngModelChange\", \"click\"], [1, \"result\"], [1, \"validation-icon\"], [\"class\", \"click-hint\", 4, \"ngIf\"], [1, \"click-hint\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"p\", 2);\n          i0.ɵɵtext(5, \"Learn multiplication tables the fun way!\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 3)(7, \"input\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_7_listener($event) {\n            return ctx.number = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_8_listener() {\n            return ctx.generateTable();\n          });\n          i0.ɵɵtext(9, \" Generate Table \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(10, AppComponent_div_10_Template, 2, 1, \"div\", 6);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.title);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.number);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.tableArray.length);\n        }\n      },\n      dependencies: [i1.NgForOf, i1.NgIf, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgModel],\n      styles: [\".result-input[_ngcontent-%COMP%] {\\n  padding: 0.5rem;\\n  width: 80px;\\n  font-size: 1.2rem;\\n  border: none;\\n  border-radius: 8px;\\n  background: #f0f2f5;\\n  box-shadow: inset 3px 3px 6px #d1d3d5, inset -3px -3px 6px #ffffff;\\n  text-align: center;\\n}\\n\\n.table-row.correct[_ngcontent-%COMP%] {\\n  background: #e8fff0;\\n}\\n\\n.table-row.incorrect[_ngcontent-%COMP%] {\\n  background: #ffe8e8;\\n}\\n\\n.validation-icon[_ngcontent-%COMP%] {\\n  margin-left: 0.5rem;\\n  font-weight: bold;\\n}\\n\\n.correct[_ngcontent-%COMP%]   .validation-icon[_ngcontent-%COMP%] {\\n  color: #27ae60;\\n}\\n\\n.incorrect[_ngcontent-%COMP%]   .validation-icon[_ngcontent-%COMP%] {\\n  color: #e74c3c;\\n}\\n\\n.click-hint[_ngcontent-%COMP%] {\\n  color: #95a5a6;\\n  font-style: italic;\\n  font-size: 0.9rem;\\n  margin-left: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtFQUNBLFdBQUE7RUFDQSxpQkFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0Esa0VBQUE7RUFFQSxrQkFBQTtBQUFGOztBQUdBO0VBQ0UsbUJBQUE7QUFBRjs7QUFHQTtFQUNFLG1CQUFBO0FBQUY7O0FBR0E7RUFDRSxtQkFBQTtFQUNBLGlCQUFBO0FBQUY7O0FBR0E7RUFDRSxjQUFBO0FBQUY7O0FBR0E7RUFDRSxjQUFBO0FBQUY7O0FBR0E7RUFDRSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxpQkFBQTtFQUNBLGlCQUFBO0FBQUYiLCJzb3VyY2VzQ29udGVudCI6WyIucmVzdWx0LWlucHV0IHtcclxuICBwYWRkaW5nOiAwLjVyZW07XHJcbiAgd2lkdGg6IDgwcHg7XHJcbiAgZm9udC1zaXplOiAxLjJyZW07XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBiYWNrZ3JvdW5kOiAjZjBmMmY1O1xyXG4gIGJveC1zaGFkb3c6IGluc2V0IDNweCAzcHggNnB4ICNkMWQzZDUsXHJcbiAgICAgICAgICAgICAgaW5zZXQgLTNweCAtM3B4IDZweCAjZmZmZmZmO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLnRhYmxlLXJvdy5jb3JyZWN0IHtcclxuICBiYWNrZ3JvdW5kOiAjZThmZmYwO1xyXG59XHJcblxyXG4udGFibGUtcm93LmluY29ycmVjdCB7XHJcbiAgYmFja2dyb3VuZDogI2ZmZThlODtcclxufVxyXG5cclxuLnZhbGlkYXRpb24taWNvbiB7XHJcbiAgbWFyZ2luLWxlZnQ6IDAuNXJlbTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLmNvcnJlY3QgLnZhbGlkYXRpb24taWNvbiB7XHJcbiAgY29sb3I6ICMyN2FlNjA7XHJcbn1cclxuXHJcbi5pbmNvcnJlY3QgLnZhbGlkYXRpb24taWNvbiB7XHJcbiAgY29sb3I6ICNlNzRjM2M7XHJcbn1cclxuXHJcbi5jbGljay1oaW50IHtcclxuICBjb2xvcjogIzk1YTVhNjtcclxuICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgZm9udC1zaXplOiAwLjlyZW07XHJcbiAgbWFyZ2luLWxlZnQ6IDFyZW07XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\", \".container[_ngcontent-%COMP%] {\\n  max-width: 800px;\\n  margin: 0 auto;\\n  padding: 2rem;\\n  font-family: 'Arial', sans-serif;\\n}\\n\\n.header[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 3rem;\\n}\\n\\n.header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n  color: #2c3e50;\\n  font-size: 2.5rem;\\n  margin-bottom: 0.5rem;\\n}\\n\\n.subtitle[_ngcontent-%COMP%] {\\n  color: #7f8c8d;\\n  font-size: 1.2rem;\\n}\\n\\n.input-section[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 1rem;\\n  justify-content: center;\\n  margin-bottom: 3rem;\\n}\\n\\n.number-input[_ngcontent-%COMP%] {\\n  padding: 0.8rem;\\n  font-size: 1.1rem;\\n  border: none;\\n  border-radius: 10px;\\n  background: #f0f2f5;\\n  box-shadow: inset 5px 5px 10px #d1d3d5,\\n              inset -5px -5px 10px #ffffff;\\n  width: 200px;\\n}\\n\\n.generate-btn[_ngcontent-%COMP%] {\\n  padding: 0.8rem 1.5rem;\\n  font-size: 1.1rem;\\n  border: none;\\n  border-radius: 10px;\\n  background: #3498db;\\n  color: white;\\n  cursor: pointer;\\n  box-shadow: 5px 5px 10px #d1d3d5,\\n             -5px -5px 10px #ffffff;\\n  transition: all 0.3s ease;\\n}\\n\\n.generate-btn[_ngcontent-%COMP%]:hover {\\n  background: #2980b9;\\n  transform: translateY(-2px);\\n}\\n\\n.table-container[_ngcontent-%COMP%] {\\n  background: #f0f2f5;\\n  border-radius: 20px;\\n  padding: 2rem;\\n  box-shadow: 10px 10px 20px #d1d3d5,\\n             -10px -10px 20px #ffffff;\\n}\\n\\n.table-row[_ngcontent-%COMP%] {\\n  margin: 1rem 0;\\n  padding: 1rem;\\n  background: white;\\n  border-radius: 10px;\\n  box-shadow: 5px 5px 10px rgba(0,0,0,0.05);\\n  transition: transform 0.3s ease;\\n  cursor: pointer;\\n}\\n\\n.table-row[_ngcontent-%COMP%]:hover {\\n  transform: translateX(10px);\\n}\\n\\n.equation[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 1rem;\\n  font-size: 1.3rem;\\n}\\n\\n.number[_ngcontent-%COMP%], .multiplier[_ngcontent-%COMP%] {\\n  color: #2c3e50;\\n  font-weight: bold;\\n}\\n\\n.operator[_ngcontent-%COMP%], .equals[_ngcontent-%COMP%] {\\n  color: #7f8c8d;\\n}\\n\\n.result[_ngcontent-%COMP%] {\\n  color: #e74c3c;\\n  font-weight: bold;\\n  font-size: 1.5rem;\\n}\\n\\n.click-hint[_ngcontent-%COMP%] {\\n  color: #95a5a6;\\n  font-style: italic;\\n  font-size: 1rem;\\n}\\n\\n.result.hidden[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n\\n.revealed[_ngcontent-%COMP%] {\\n  background: #e8f6ff;\\n}\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;IA8CQA,gCAAsD;IACpDA,uCACF;IAAAA,iBAAO;;;;;;IAzBXA,8BAKyD;IAHpDA;MAAA;MAAA;MAAA;MAAA,OAASA,uCAAc;IAAA,EAAC;IAI3BA,+BAAsB;IACCA,YAAY;IAAAA,iBAAO;IACxCA,gCAAuB;IAAAA,sBAAC;IAAAA,iBAAO;IAC/BA,gCAAyB;IAAAA,YAAW;IAAAA,iBAAO;IAC3CA,gCAAqB;IAAAA,iBAAC;IAAAA,iBAAO;IAC7BA,kCAKC;IAHCA;MAAA;MAAA;MAAA;MAAA;IAAA,EAA2B;MAAA,OAElBC,wBAAwB;IAAA,EAFN;IAF7BD,iBAKC;IACDA,iCAA2D;IACzDA,aACA;IAAAA,iCAA8B;IAC5BA,aACF;IAAAA,iBAAO;IAETA,+EAEO;IACTA,iBAAM;;;;;;IAvBHA,yDAAsC;IAIlBA,eAAY;IAAZA,mCAAY;IAERA,eAAW;IAAXA,8BAAW;IAIlCA,eAA2B;IAA3BA,iDAA2B;IAIRA,eAAqC;IAArCA,wDAAqC;IACxDA,eACA;IADAA,0CACA;IACEA,eACF;IADEA,+FACF;IAEwBA,eAA0B;IAA1BA,qDAA0B;;;;;IAxB1DA,8BAAuD;IACrDA,sEA2BM;IACRA,iBAAM;;;;IA3BoBA,eAAe;IAAfA,2CAAe;;;ACjB3C,OAAM,MAAOE,YAAY;EALzBC;IAME,UAAK,GAAG,eAAe;IACvB,WAAM,GAAW,CAAC;IAClB,eAAU,GAAa,EAAE;IACzB,iBAAY,GAAgB,IAAIC,GAAG,EAAE;IACrC,eAAU,GAAa,EAAE;IACzB,mBAAc,GAAgC,IAAIC,GAAG,EAAE,CAAC,CAAC;;;EAEzDC,aAAa;IACX,IAAI,CAACC,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,YAAY,CAACC,KAAK,EAAE;IACzB,IAAI,CAACC,UAAU,GAAG,IAAIC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IAC1C,IAAI,CAACC,cAAc,CAACJ,KAAK,EAAE;IAC3B,KAAI,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC3B,IAAI,CAACP,UAAU,CAACQ,IAAI,CAACD,CAAC,GAAG,IAAI,CAACE,MAAM,CAAC;;EAEzC;EAEAC,WAAW,CAACC,KAAa;IACvB,IAAI,IAAI,CAACR,UAAU,CAACQ,KAAK,CAAC,KAAKC,SAAS,IAAI,IAAI,CAACT,UAAU,CAACQ,KAAK,CAAC,KAAK,IAAI,EAAE;IAE7E,MAAME,SAAS,GAAG,IAAI,CAACV,UAAU,CAACQ,KAAK,CAAC,KAAK,IAAI,CAACX,UAAU,CAACW,KAAK,CAAC;IACnE,IAAI,CAACL,cAAc,CAACQ,GAAG,CAACH,KAAK,EAAEE,SAAS,CAAC;IACzC,IAAI,CAACZ,YAAY,CAACc,GAAG,CAACJ,KAAK,CAAC;EAC9B;;;uBAxBWhB,YAAY;IAAA;EAAA;;;YAAZA,YAAY;MAAAqB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDPzB3B,8BAAuB;UAEfA,YAAW;UAAAA,iBAAK;UACpBA,4BAAoB;UAAAA,wDAAwC;UAAAA,iBAAI;UAGlEA,8BAA2B;UAIvBA;YAAA;UAAA,EAAiC;UAHnCA,iBAMC;UACDA,iCAGC;UAFCA;YAAA,OAAS4B,mBAAe;UAAA,EAAC;UAGzB5B,gCACF;UAAAA,iBAAS;UAGXA,+DA6BM;UACRA,iBAAM;;;UAlDEA,eAAW;UAAXA,+BAAW;UAObA,eAAkB;UAAlBA,oCAAkB;UAaQA,eAAuB;UAAvBA,4CAAuB","names":["i0","$event","AppComponent","constructor","Set","Map","generateTable","tableArray","shownResults","clear","userInputs","Array","fill","resultStatuses","i","push","number","checkResult","index","undefined","isCorrect","set","add","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\CGIGEN_PROJECTS\\NumericTable\\Numeric\\src\\app\\app.component.html","D:\\CGIGEN_PROJECTS\\NumericTable\\Numeric\\src\\app\\app.component.ts"],"sourcesContent":["<div class=\"container\">\n  <div class=\"header\">\n    <h1>{{ title }}</h1>\n    <p class=\"subtitle\">Learn multiplication tables the fun way!</p>\n  </div>\n\n  <div class=\"input-section\">\n    <input \n      type=\"number\" \n      [ngModel]=\"number\"\n      (ngModelChange)=\"number = $event\"\n      placeholder=\"Enter a number\" \n      class=\"number-input\"\n    >\n    <button \n      (click)=\"generateTable()\"  \n      class=\"generate-btn\"\n    >\n      Generate Table\n    </button>\n  </div>\n\n  <div class=\"table-container\" *ngIf=\"tableArray.length\">\n    <div class=\"table-row\" \n         *ngFor=\"let result of tableArray; let i = index\"\n         (click)=\"checkResult(i)\"\n         [class.revealed]=\"shownResults.has(i)\"\n         [class.correct]=\"resultStatuses.get(i) === true\"\n         [class.incorrect]=\"resultStatuses.get(i) === false\">\n      <div class=\"equation\">\n        <span class=\"number\">{{ number }}</span>\n        <span class=\"operator\">×</span>\n        <span class=\"multiplier\">{{ i + 1 }}</span>\n        <span class=\"equals\">=</span>\n        <input \n          type=\"number\" \n          [(ngModel)]=\"userInputs[i]\"\n          class=\"result-input\"\n          (click)=\"$event.stopPropagation()\"\n        >\n        <span class=\"result\" [class.hidden]=\"!shownResults.has(i)\">\n          {{ result }}\n          <span class=\"validation-icon\">\n            {{ resultStatuses.get(i) === true ? '✓' : '✗' }}\n          </span>\n        </span>\n        <span class=\"click-hint\" *ngIf=\"!shownResults.has(i)\">\n          Click to check answer\n        </span>\n      </div>\n    </div>\n  </div>\n</div>\n\n<style>\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  font-family: 'Arial', sans-serif;\n}\n\n.header {\n  text-align: center;\n  margin-bottom: 3rem;\n}\n\n.header h1 {\n  color: #2c3e50;\n  font-size: 2.5rem;\n  margin-bottom: 0.5rem;\n}\n\n.subtitle {\n  color: #7f8c8d;\n  font-size: 1.2rem;\n}\n\n.input-section {\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  margin-bottom: 3rem;\n}\n\n.number-input {\n  padding: 0.8rem;\n  font-size: 1.1rem;\n  border: none;\n  border-radius: 10px;\n  background: #f0f2f5;\n  box-shadow: inset 5px 5px 10px #d1d3d5,\n              inset -5px -5px 10px #ffffff;\n  width: 200px;\n}\n\n.generate-btn {\n  padding: 0.8rem 1.5rem;\n  font-size: 1.1rem;\n  border: none;\n  border-radius: 10px;\n  background: #3498db;\n  color: white;\n  cursor: pointer;\n  box-shadow: 5px 5px 10px #d1d3d5,\n             -5px -5px 10px #ffffff;\n  transition: all 0.3s ease;\n}\n\n.generate-btn:hover {\n  background: #2980b9;\n  transform: translateY(-2px);\n}\n\n.table-container {\n  background: #f0f2f5;\n  border-radius: 20px;\n  padding: 2rem;\n  box-shadow: 10px 10px 20px #d1d3d5,\n             -10px -10px 20px #ffffff;\n}\n\n.table-row {\n  margin: 1rem 0;\n  padding: 1rem;\n  background: white;\n  border-radius: 10px;\n  box-shadow: 5px 5px 10px rgba(0,0,0,0.05);\n  transition: transform 0.3s ease;\n  cursor: pointer;\n}\n\n.table-row:hover {\n  transform: translateX(10px);\n}\n\n.equation {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n  font-size: 1.3rem;\n}\n\n.number, .multiplier {\n  color: #2c3e50;\n  font-weight: bold;\n}\n\n.operator, .equals {\n  color: #7f8c8d;\n}\n\n.result {\n  color: #e74c3c;\n  font-weight: bold;\n  font-size: 1.5rem;\n}\n\n.click-hint {\n  color: #95a5a6;\n  font-style: italic;\n  font-size: 1rem;\n}\n\n.result.hidden {\n  display: none;\n}\n\n.revealed {\n  background: #e8f6ff;\n}\n</style>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'NeumericTable';\n  number: number = 0;\n  tableArray: number[] = [];\n  shownResults: Set<number> = new Set();\n  userInputs: number[] = [];\n  resultStatuses: Map<number, boolean | null> = new Map(); // null = not checked, true = correct, false = wrong\n\n  generateTable() {\n    this.tableArray = [];\n    this.shownResults.clear();\n    this.userInputs = new Array(10).fill(null);\n    this.resultStatuses.clear();\n    for(let i = 1; i <= 10; i++) {\n      this.tableArray.push(i * this.number);\n    }\n  }\n\n  checkResult(index: number) {\n    if (this.userInputs[index] === undefined || this.userInputs[index] === null) return;\n    \n    const isCorrect = this.userInputs[index] === this.tableArray[index];\n    this.resultStatuses.set(index, isCorrect);\n    this.shownResults.add(index);\n  }\n}\n \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}