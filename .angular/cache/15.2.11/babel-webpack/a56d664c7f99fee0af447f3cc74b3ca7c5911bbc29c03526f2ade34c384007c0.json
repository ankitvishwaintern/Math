{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction AppComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\", 10)(2, \"span\", 11);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 12);\n    i0.ɵɵtext(5, \"\\u00D7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 13);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\", 14);\n    i0.ɵɵtext(9, \"=\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"span\", 15);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const result_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.number);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i_r3 + 1);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(result_r2);\n  }\n}\nfunction AppComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, AppComponent_div_10_div_1_Template, 12, 3, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.tableArray);\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.title = 'NeumericTable';\n    this.number = 0;\n    this.tableArray = [];\n    this.shownResults = new Set();\n  }\n  generateTable() {\n    this.tableArray = [];\n    this.shownResults.clear();\n    for (let i = 1; i <= 10; i++) {\n      this.tableArray.push(i * this.number);\n    }\n  }\n  toggleResult(index) {\n    if (this.shownResults.has(index)) {\n      this.shownResults.delete(index);\n    } else {\n      this.shownResults.add(index);\n    }\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 11,\n      vars: 3,\n      consts: [[1, \"container\"], [1, \"header\"], [1, \"subtitle\"], [1, \"input-section\"], [\"type\", \"number\", \"placeholder\", \"Enter a number\", 1, \"number-input\", 3, \"ngModel\", \"ngModelChange\"], [1, \"generate-btn\", 3, \"click\"], [\"class\", \"table-container\", 4, \"ngIf\"], [1, \"table-container\"], [\"class\", \"table-row\", 4, \"ngFor\", \"ngForOf\"], [1, \"table-row\"], [1, \"equation\"], [1, \"number\"], [1, \"operator\"], [1, \"multiplier\"], [1, \"equals\"], [1, \"result\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"p\", 2);\n          i0.ɵɵtext(5, \"Learn multiplication tables the fun way!\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 3)(7, \"input\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_7_listener($event) {\n            return ctx.number = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_8_listener() {\n            return ctx.generateTable();\n          });\n          i0.ɵɵtext(9, \" Generate Table \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(10, AppComponent_div_10_Template, 2, 1, \"div\", 6);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.title);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.number);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.tableArray.length);\n        }\n      },\n      dependencies: [i1.NgForOf, i1.NgIf, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgModel],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \".container[_ngcontent-%COMP%] {\\n  max-width: 800px;\\n  margin: 0 auto;\\n  padding: 2rem;\\n  font-family: 'Arial', sans-serif;\\n}\\n\\n.header[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 3rem;\\n}\\n\\n.header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n  color: #2c3e50;\\n  font-size: 2.5rem;\\n  margin-bottom: 0.5rem;\\n}\\n\\n.subtitle[_ngcontent-%COMP%] {\\n  color: #7f8c8d;\\n  font-size: 1.2rem;\\n}\\n\\n.input-section[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 1rem;\\n  justify-content: center;\\n  margin-bottom: 3rem;\\n}\\n\\n.number-input[_ngcontent-%COMP%] {\\n  padding: 0.8rem;\\n  font-size: 1.1rem;\\n  border: none;\\n  border-radius: 10px;\\n  background: #f0f2f5;\\n  box-shadow: inset 5px 5px 10px #d1d3d5,\\n              inset -5px -5px 10px #ffffff;\\n  width: 200px;\\n}\\n\\n.generate-btn[_ngcontent-%COMP%] {\\n  padding: 0.8rem 1.5rem;\\n  font-size: 1.1rem;\\n  border: none;\\n  border-radius: 10px;\\n  background: #3498db;\\n  color: white;\\n  cursor: pointer;\\n  box-shadow: 5px 5px 10px #d1d3d5,\\n             -5px -5px 10px #ffffff;\\n  transition: all 0.3s ease;\\n}\\n\\n.generate-btn[_ngcontent-%COMP%]:hover {\\n  background: #2980b9;\\n  transform: translateY(-2px);\\n}\\n\\n.table-container[_ngcontent-%COMP%] {\\n  background: #f0f2f5;\\n  border-radius: 20px;\\n  padding: 2rem;\\n  box-shadow: 10px 10px 20px #d1d3d5,\\n             -10px -10px 20px #ffffff;\\n}\\n\\n.table-row[_ngcontent-%COMP%] {\\n  margin: 1rem 0;\\n  padding: 1rem;\\n  background: white;\\n  border-radius: 10px;\\n  box-shadow: 5px 5px 10px rgba(0,0,0,0.05);\\n  transition: transform 0.3s ease;\\n}\\n\\n.table-row[_ngcontent-%COMP%]:hover {\\n  transform: translateX(10px);\\n}\\n\\n.equation[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 1rem;\\n  font-size: 1.3rem;\\n}\\n\\n.number[_ngcontent-%COMP%], .multiplier[_ngcontent-%COMP%] {\\n  color: #2c3e50;\\n  font-weight: bold;\\n}\\n\\n.operator[_ngcontent-%COMP%], .equals[_ngcontent-%COMP%] {\\n  color: #7f8c8d;\\n}\\n\\n.result[_ngcontent-%COMP%] {\\n  color: #e74c3c;\\n  font-weight: bold;\\n  font-size: 1.5rem;\\n}\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;IAuBIA,8BAAwE;IAE/CA,YAAY;IAAAA,iBAAO;IACxCA,gCAAuB;IAAAA,sBAAC;IAAAA,iBAAO;IAC/BA,gCAAyB;IAAAA,YAAW;IAAAA,iBAAO;IAC3CA,gCAAqB;IAAAA,iBAAC;IAAAA,iBAAO;IAC7BA,iCAAqB;IAAAA,aAAY;IAAAA,iBAAO;;;;;;IAJnBA,eAAY;IAAZA,mCAAY;IAERA,eAAW;IAAXA,8BAAW;IAEfA,eAAY;IAAZA,+BAAY;;;;;IAPvCA,8BAAuD;IACrDA,qEAQM;IACRA,iBAAM;;;;IATsCA,eAAe;IAAfA,2CAAe;;;AChB7D,OAAM,MAAOC,YAAY;EALzBC;IAME,UAAK,GAAG,eAAe;IACvB,WAAM,GAAW,CAAC;IAClB,eAAU,GAAa,EAAE;IACzB,iBAAY,GAAgB,IAAIC,GAAG,EAAE;;EAErCC,aAAa;IACX,IAAI,CAACC,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,YAAY,CAACC,KAAK,EAAE;IACzB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC3B,IAAI,CAACH,UAAU,CAACI,IAAI,CAACD,CAAC,GAAG,IAAI,CAACE,MAAM,CAAC;;EAEzC;EAEAC,YAAY,CAACC,KAAa;IACxB,IAAI,IAAI,CAACN,YAAY,CAACO,GAAG,CAACD,KAAK,CAAC,EAAE;MAChC,IAAI,CAACN,YAAY,CAACQ,MAAM,CAACF,KAAK,CAAC;KAChC,MAAM;MACL,IAAI,CAACN,YAAY,CAACS,GAAG,CAACH,KAAK,CAAC;;EAEhC;;;uBApBWX,YAAY;IAAA;EAAA;;;YAAZA,YAAY;MAAAe;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDPzBpB,8BAAuB;UAEfA,YAAW;UAAAA,iBAAK;UACpBA,4BAAoB;UAAAA,wDAAwC;UAAAA,iBAAI;UAGlEA,8BAA2B;UAIvBA;YAAA;UAAA,EAAiC;UAHnCA,iBAMC;UACDA,iCAGC;UAFCA;YAAA,OAASqB,mBAAe;UAAA,EAAC;UAGzBrB,gCACF;UAAAA,iBAAS;UAGXA,+DAUM;UACRA,iBAAM;;;UA/BEA,eAAW;UAAXA,+BAAW;UAObA,eAAkB;UAAlBA,oCAAkB;UAaQA,eAAuB;UAAvBA,4CAAuB","names":["i0","AppComponent","constructor","Set","generateTable","tableArray","shownResults","clear","i","push","number","toggleResult","index","has","delete","add","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\CGIGEN_PROJECTS\\NumericTable\\neumerictable\\src\\app\\app.component.html","D:\\CGIGEN_PROJECTS\\NumericTable\\neumerictable\\src\\app\\app.component.ts"],"sourcesContent":["<div class=\"container\">\n  <div class=\"header\">\n    <h1>{{ title }}</h1>\n    <p class=\"subtitle\">Learn multiplication tables the fun way!</p>\n  </div>\n\n  <div class=\"input-section\">\n    <input \n      type=\"number\" \n      [ngModel]=\"number\"\n      (ngModelChange)=\"number = $event\"\n      placeholder=\"Enter a number\" \n      class=\"number-input\"\n    >\n    <button \n      (click)=\"generateTable()\" \n      class=\"generate-btn\"\n    >\n      Generate Table\n    </button>\n  </div>\n\n  <div class=\"table-container\" *ngIf=\"tableArray.length\">\n    <div class=\"table-row\" *ngFor=\"let result of tableArray; let i = index\">\n      <div class=\"equation\">\n        <span class=\"number\">{{ number }}</span>\n        <span class=\"operator\">×</span>\n        <span class=\"multiplier\">{{ i + 1 }}</span>\n        <span class=\"equals\">=</span>\n        <span class=\"result\">{{ result }}</span>\n      </div>\n    </div>\n  </div>\n</div>\n\n<style>\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  font-family: 'Arial', sans-serif;\n}\n\n.header {\n  text-align: center;\n  margin-bottom: 3rem;\n}\n\n.header h1 {\n  color: #2c3e50;\n  font-size: 2.5rem;\n  margin-bottom: 0.5rem;\n}\n\n.subtitle {\n  color: #7f8c8d;\n  font-size: 1.2rem;\n}\n\n.input-section {\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  margin-bottom: 3rem;\n}\n\n.number-input {\n  padding: 0.8rem;\n  font-size: 1.1rem;\n  border: none;\n  border-radius: 10px;\n  background: #f0f2f5;\n  box-shadow: inset 5px 5px 10px #d1d3d5,\n              inset -5px -5px 10px #ffffff;\n  width: 200px;\n}\n\n.generate-btn {\n  padding: 0.8rem 1.5rem;\n  font-size: 1.1rem;\n  border: none;\n  border-radius: 10px;\n  background: #3498db;\n  color: white;\n  cursor: pointer;\n  box-shadow: 5px 5px 10px #d1d3d5,\n             -5px -5px 10px #ffffff;\n  transition: all 0.3s ease;\n}\n\n.generate-btn:hover {\n  background: #2980b9;\n  transform: translateY(-2px);\n}\n\n.table-container {\n  background: #f0f2f5;\n  border-radius: 20px;\n  padding: 2rem;\n  box-shadow: 10px 10px 20px #d1d3d5,\n             -10px -10px 20px #ffffff;\n}\n\n.table-row {\n  margin: 1rem 0;\n  padding: 1rem;\n  background: white;\n  border-radius: 10px;\n  box-shadow: 5px 5px 10px rgba(0,0,0,0.05);\n  transition: transform 0.3s ease;\n}\n\n.table-row:hover {\n  transform: translateX(10px);\n}\n\n.equation {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n  font-size: 1.3rem;\n}\n\n.number, .multiplier {\n  color: #2c3e50;\n  font-weight: bold;\n}\n\n.operator, .equals {\n  color: #7f8c8d;\n}\n\n.result {\n  color: #e74c3c;\n  font-weight: bold;\n  font-size: 1.5rem;\n}\n</style>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'NeumericTable';\n  number: number = 0;\n  tableArray: number[] = [];\n  shownResults: Set<number> = new Set();\n\n  generateTable() {\n    this.tableArray = [];\n    this.shownResults.clear();\n    for(let i = 1; i <= 10; i++) {\n      this.tableArray.push(i * this.number);\n    }\n  }\n\n  toggleResult(index: number) {\n    if (this.shownResults.has(index)) {\n      this.shownResults.delete(index);\n    } else {\n      this.shownResults.add(index);\n    }\n  }\n}\n \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}